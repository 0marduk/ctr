#VRML V2.0 utf8

#Cosmo Worlds V2.0
#PROTO Marker 
DEF Wrapper1 Transform{
	children
Transform {
	children[
DEF BOX Transform {
	children[	 Shape {
    appearance	Appearance {
      material	Material {
		  diffuseColor 0 0 1
    	emissiveColor 0 0 1
		  
      }

    }

    geometry	IndexedLineSet {
		coord Coordinate  {
			point [-0.5 -0.5 0.5, 0.5 -0.5 0.5, 0.5 -0.5 -0.5, -0.5 -0.5 -0.5,
				-0.5  0.5 0.5, 0.5  0.5 0.5,	0.5  0.5 -0.5, -0.5  0.5 -0.5]
			}
			coordIndex [3,2,1,0,-1,
				0,1,5,4,-1,
				1,2,6,5,-1,
				2,3,7,6,-1,
				3,0,4,7,-1,
				4,5,6,7,-1	 ]

    }

  #translation	0 1 1
}
Shape {
	appearance Appearance {
		material Material {
			transparency 0.5
			diffuseColor 0.8 0.8 0.8
		}
	}
	geometry	IndexedFaceSet {
		coord Coordinate  {
			point [-0.5 -0.5 0.5, 0.5 -0.5 0.5, 0.5 -0.5 -0.5, -0.5 -0.5 -0.5,
				-0.5  0.5 0.5, 0.5  0.5 0.5,	0.5  0.5 -0.5, -0.5  0.5 -0.5]
			}
			coordIndex [3,2,1,0,-1,
				0,1,5,4,-1,
				1,2,6,5,-1,
				2,3,7,6,-1,
				3,0,4,7,-1,
				4,5,6,7,-1	 ]

    }
}
Viewpoint {
	description	"marker"
	position 0 0 4
}
]
#Animation:the speed of movement, 
}
DEF	Chronos TimeSensor {
	cycleInterval  10 #shorter = quicker
	loop TRUE
	startTime 1
}
#change of the colour
DEF	FarbCalc ColorInterpolator  {
	key [  0.0  1.0]	   #from red to green
	keyValue  [1 0 0, 0 .5 0]
	#0 0 1, 1 0 0]
} 
#change of the position - translation in the Bbox corners
DEF	PosCalc PositionInterpolator  {
	key[0.0 0.1 0.2 0.3 0.4 
		0.5 0.6 0.7  0.8 0.9 1.0 ]
	keyValue [	-0.5 -0.5 0.5, 0.5 -0.5 0.5, 0.5 -0.5 -0.5, -0.5 -0.5 -0.5,		-0.5 -0.5 0.5
				-0.5  0.5 0.5, 0.5  0.5 0.5,	0.5  0.5 -0.5, -0.5  0.5 -0.5, -0.5  0.5 0.5, -0.5 -0.5 0.5]
}
#change of the position - translation in the Bbox corners
DEF	Pos2Calc PositionInterpolator  {
	key[0.0 0.1 0.2 0.3 0.4 
		0.5 0.6 0.7  0.8 0.9 1.0 ]
	keyValue [	-1 -1 1, 1 -1 1, 1 -1 -1, -1 -1 -1,		-1 -1 1,#-1 -1 1,
				-1  1 1, 1  1 1,	1  1 -1, -1  1 -1, -1  1 1, -1 -1 1,]
}
#rotation ,the top of the cone shows into the Bbox
DEF	Rot2Calc OrientationInterpolator  {
	key [ 0.0 0.1 0.2 0.3 0.4  0.5
		 0.6 0.7  0.8  0.9 1.0 ]
	keyValue [ 
						
			0 1 0 4.71 ,
			0 1 0  0,
			0 1 0  1.57,
			0 1 0  3.14,
			0 1 0 4.71 ,
			#0 1 0 6.3 ,
					  #second half
			0 1 0 4.71 ,
			0 1 0   0,
			0 1 0  1.57,
			0 1 0  3.14,
			0 1 0 4.71 ,
			0 1 0 4.71 ,
	]
}
	#change of the cone color during the moving
#ROUTE Chronos.fraction_changed TO FarbCalc.set_fraction
#ROUTE FarbCalc.value_changed TO	ConeFarbe.set_diffuseColor
   #change of the cone position round BBOx

#the marker CONE
]
	scale 1.01 1.01 1.01
}
	
}
DEF CONE_TRANS Transform {
	children
DEF	C1 Transform {children
Transform {
	children[	Shape {
    appearance	Appearance {
      material	DEF ConeFarbe Material {
	ambientIntensity	0.246377
	diffuseColor	0.69 0.13 0.33
	specularColor	0.12 0.05 0.05
	emissiveColor	0 0 0
	shininess	0.07
	transparency	0
      }

    }

    geometry	Cone {
	
    }

  }
  #using of the Point Light 
#PointLight { }	
 
]
  
  rotation	0.960422 -0.257344 -0.106596  3.89884
  scale	0.2500749 0.2500749 0.2500749
 center 0.12 0.13 0.116  #center on the bbox corner
   
}
   
translation 0.52 0.52 0.5
	 #rotation around the top of the cone
rotation 0 0 0 0

}
}
#DEF	SP1 SpotLight {
#		direction 0 0 0
#		location	1 1 1
#		radius 3
#		cutOffAngle	45
#		  beamWidth	30
#		  intensity	1

#	}
DEF coneControl Script {
	eventIn	SFVec3f	position_in
	field SFNode wrapper1 USE Wrapper1
	#field SFNode cone USE C1
	eventOut SFVec3f position_out

	#""
	url	"vrmlscript:
	function position_in(value){
		print(value);
		position_out = new SFVec3f(wrapper1.scale[0]*value[0], wrapper1.scale[1]*value[1], wrapper1.scale[2]*value[2]);
		print(position_out);
	}
	"
}
DEF _Routes Group {
	
ROUTE Chronos.fraction_changed TO PosCalc.set_fraction
#ROUTE PosCalc.value_changed TO C1.translation


	#change of light source position
ROUTE Chronos.fraction_changed TO Pos2Calc.set_fraction
#ROUTE Pos2Calc.value_changed TO SP1.location
	#rotation round Y axis
ROUTE Chronos.fraction_changed TO Rot2Calc.set_fraction
ROUTE Rot2Calc.value_changed TO C1.rotation

ROUTE PosCalc.value_changed TO	coneControl.position_in
ROUTE coneControl.position_out TO C1.translation
	}

